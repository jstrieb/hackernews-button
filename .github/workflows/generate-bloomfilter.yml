# Generate Bloom filters with submitted Hacker News stories periodically and
# on-command for use in the accompanying browser extension.
#
# Created by Jacob Strieb
# January 2021


name: Generate Bloom Filter

# Run once every 24 hours because that is how often the BigQuery database seems
# to be updated. Also run when manually triggered.
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:


jobs:
  create-bloomfilter:
    name: Create Bloom Filter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up BigQuery
        run: |
          # This BQ_JSON key is obtained by downloading the JSON key for a
          # service account on BigQuery. It is then copied directly into a
          # GitHub Actions secret (under Settings)
          echo '${{ secrets.BQ_JSON }}' > bq.json
          gcloud auth \
            activate-service-account \
            --key-file bq.json
          # Unfortunately, bq outputs some dumb shit the first time we run it
          # with the new authentication, so we do a dummy call here to prevent
          # it from outputting the annoying welcome message directly into the
          # CSV we are attempting to process
          bq query \
            --use_legacy_sql=false \
            'SELECT COUNT(*) FROM `bigquery-public-data.hacker_news.full`'

      - name: Compile Bloom filter creation program
        run: |
          make create

      - name: Pull BigQuery data
        run: |
          # Note that max_rows must be an unsigned, 32-bit int
          bq query \
            --format csv \
            --max_rows 99999999 \
            --use_legacy_sql=false \
            'SELECT
              url,
              score,
              descendants,
              time
             FROM
               `bigquery-public-data.hacker_news.full`
             WHERE
               type = "story"
               AND dead IS NOT TRUE
               AND deleted IS NOT TRUE
               AND url != ""' \
            > data.csv
          head -n 50 data.csv

      - name: Generate Bloom Filters
        run: |
          python3 canonicalize.py < data.csv \
            | bin/bloom-create hackernews.bloom

      - name: Set Datestrings (for Release Name/Tag)
        id: set_datestrings
        run: |
          # https://git.io/JLbLa
          echo "::set-output name=date_num::$(date +%Y%m%d)"
          echo "::set-output name=date_text::$(date '+%B %d, %Y')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_datestrings.outputs.date_num }}
          release_name: ${{ steps.set_datestrings.outputs.date_text }}

      - name: Upload Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hackernews.bloom
          asset_name: hackernews.bloom
          asset_content_type: application/octet-stream
